@model Final.Models.ViewModels.FAQVm

@{
    ViewBag.Title = "新增常見問題";
}

<h2>新增常見問題</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="mb-3">
            @Html.LabelFor(model => model.Question, htmlAttributes: new { @class = "form-label col-md-2" })

            @Html.EditorFor(model => model.Question, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Question, "", new { @class = "text-danger" })

        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Answer, htmlAttributes: new { @class = "form-label col-md-2" })

            @Html.EditorFor(model => model.Answer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })

        </div>

        <div class="mb-3">
            <div class="form-check">
                @Html.CheckBoxFor(model => model.Enabled, new { @class = "form-check-input" })
                @Html.LabelFor(model => model.Enabled, new { @class = "form-check-label" })
                @Html.ValidationMessageFor(model => model.Enabled, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="mb-3">
            @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "form-label col-md-2" })

            @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })

        </div>

        <div class="mb-3">
            <div class="text-end">
                <input type="submit" value="新增" class="btn btn-primary" />
                @Html.ActionLink("回清單頁", "Index", null, new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}


@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
